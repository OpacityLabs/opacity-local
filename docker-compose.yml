services:
  ethereum:
    platform: linux/amd64
    build:
      context: ./docker/ethereum
      dockerfile: Dockerfile.ethereum
    env_file:
      - .env
    ports:
      - "8545:8545"
  
  eigenlayer:
    platform: linux/amd64
    build:
      context: ./docker/eigenlayer
      dockerfile: Dockerfile.eigenlayer
    depends_on:
      - ethereum
    env_file:
      - .env
    volumes:
      - ./.nodes:/root/.nodes
  
  nodeselector:
    platform: linux/amd64
    image: opacitylabs/opacity-node-selector:verify
    pull_policy: always
    env_file:
      - .env
    volumes:
      - ./.env:/.env
    ports:
      - "8080:8080"
    depends_on:
      eigenlayer:
        condition: service_completed_successfully
  
  node1:
    image: opacitylabs/opacity-avs-node:testnet
    pull_policy: always
    platform: linux/amd64
    environment:
      - OPERATOR_BLS_KEY_PASSWORD=Testacc1Testacc1
      - OPERATOR_BLS_KEY_FILE=/.nodes/operator_keys/testacc1.bls.key.json
      - OPERATOR_ECDSA_KEY_FILE=/.nodes/operator_keys/testacc1.ecdsa.key.json
      - OPERATOR_ECDSA_KEY_PASSWORD=Testacc1Testacc1
      - NODE_IP=http://node1
      - SIGNER_ENDPOINT=http://signer:50051
      - MAX_TIME_DIFF_SECONDS=600
    volumes:
      - ./.nodes/operator_keys/testacc1.bls.key.json:/opacity-avs-node/config/opacity.bls.key.json
      - ./.nodes/operator_keys/testacc1.ecdsa.key.json:/opacity-avs-node/config/opacity.ecdsa.key.json
      - ./.nodes/configs/testacc1.config.yaml:/opacity-avs-node/config/opacity.config.yaml
      - ./.nodes/operator_keys/testacc1.bls.identifier:/opacity-avs-node/config/remote.bls.identifier
      - ./docker/node/config.yaml:/opacity-avs-node/config/config.yaml
      - ./docker/node/start.sh:/opacity-avs-node/start.sh
      - ./docker/node/fixture:/opacity-avs-node/fixture
    ports:
      - "7047:7047"
      - "6047:6047"
    entrypoint:
      - /bin/sh
      - -c
      - "chmod +x /opacity-avs-node/start.sh && /opacity-avs-node/start.sh"
    depends_on:
      eigenlayer:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f --http0.9 -w '%{http_code}' http://node1:7047 | grep -q 2000"]
      start_period: 120s
      start_interval: 10s
      timeout: 5s
      interval: 999999h
  
  node2:
    image: opacitylabs/opacity-avs-node:testnet
    pull_policy: always
    platform: linux/amd64
    environment:
      - OPERATOR_BLS_KEY_PASSWORD=Testacc1Testacc1
      - OPERATOR_BLS_KEY_FILE=/.nodes/operator_keys/testacc2.bls.key.json
      - OPERATOR_ECDSA_KEY_FILE=/.nodes/operator_keys/testacc2.ecdsa.key.json
      - OPERATOR_ECDSA_KEY_PASSWORD=Testacc1Testacc1
      - NODE_IP=http://node2
      - SIGNER_ENDPOINT=http://signer:50051
      - MAX_TIME_DIFF_SECONDS=600
    volumes:
      - ./.nodes/operator_keys/testacc2.bls.key.json:/opacity-avs-node/config/opacity.bls.key.json
      - ./.nodes/operator_keys/testacc2.ecdsa.key.json:/opacity-avs-node/config/opacity.ecdsa.key.json
      - ./.nodes/operator_keys/testacc2.bls.identifier:/opacity-avs-node/config/remote.bls.identifier
      - ./.nodes/configs/testacc2.config.yaml:/opacity-avs-node/config/opacity.config.yaml
      - ./docker/node/config.yaml:/opacity-avs-node/config/config.yaml
      - ./docker/node/start.sh:/opacity-avs-node/start.sh
      - ./docker/node/fixture:/opacity-avs-node/fixture
    ports:
      - "7048:7047"
      - "6048:6047"
    entrypoint:
      - /bin/sh
      - -c
      - "chmod +x /opacity-avs-node/start.sh && /opacity-avs-node/start.sh"
    depends_on:
      eigenlayer:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f --http0.9 -w '%{http_code}' http://node2:7047 | grep -q 2000"]
      start_period: 120s
      start_interval: 10s
      timeout: 5s
      interval: 999999h
  
  node3:
    image: opacitylabs/opacity-avs-node:testnet
    pull_policy: always
    platform: linux/amd64
    environment:
      - OPERATOR_BLS_KEY_PASSWORD=Testacc1Testacc1
      - OPERATOR_BLS_KEY_FILE=/.nodes/operator_keys/testacc3.bls.key.json
      - OPERATOR_ECDSA_KEY_FILE=/.nodes/operator_keys/testacc3.ecdsa.key.json
      - OPERATOR_ECDSA_KEY_PASSWORD=Testacc1Testacc1
      - NODE_IP=http://node3
      - SIGNER_ENDPOINT=http://signer:50051
      - MAX_TIME_DIFF_SECONDS=600
    volumes:
      - ./.nodes/operator_keys/testacc3.bls.key.json:/opacity-avs-node/config/opacity.bls.key.json
      - ./.nodes/operator_keys/testacc3.ecdsa.key.json:/opacity-avs-node/config/opacity.ecdsa.key.json
      - ./.nodes/configs/testacc3.config.yaml:/opacity-avs-node/config/opacity.config.yaml
      - ./.nodes/operator_keys/testacc3.bls.identifier:/opacity-avs-node/config/remote.bls.identifier
      - ./docker/node/config.yaml:/opacity-avs-node/config/config.yaml
      - ./docker/node/start.sh:/opacity-avs-node/start.sh
      - ./docker/node/fixture:/opacity-avs-node/fixture
    ports:
      - "7049:7047"
      - "6049:6047"
    entrypoint:
      - /bin/sh
      - -c
      - "chmod +x /opacity-avs-node/start.sh && /opacity-avs-node/start.sh"
    depends_on:
      eigenlayer:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f --http0.9 -w '%{http_code}' http://node3:7047 | grep -q 2000"]
      start_period: 120s
      start_interval: 10s
      timeout: 5s
      interval: 999999h
  
  prover:
    image: opacitylabs/opacity-simple-prover:verify
    # pull_policy: always
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - ./.nodes/operator_keys:/app/operator_keys:ro
    depends_on:
      node1:
        condition: service_healthy
      node2:
        condition: service_healthy
      node3:
        condition: service_healthy
  
  signer:
    image: ghcr.io/layr-labs/cerberus:0.0.2
    platform: linux/amd64
    ports:
      - "${CERBERUS_METRICS_PORT}:${CERBERUS_METRICS_PORT}"
      - "${CERBERUS_GRPC_PORT}:${CERBERUS_GRPC_PORT}"
    environment:
      - "METRICS_PORT=${CERBERUS_METRICS_PORT}"
    env_file:
      - .env
    restart: unless-stopped
